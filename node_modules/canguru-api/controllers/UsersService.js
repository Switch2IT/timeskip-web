'use strict';

exports.createUser = function(args, res, next) {
  /**
   * Create a user
   * Create a user
   *
   * body UserBean  (optional)
   * no response value expected for this operation
   **/
  res.end();
}

exports.getCurrentUser = function(args, res, next) {
  /**
   * Get current user
   * Get the current user
   *
   * returns UserDTO
   **/
  var examples = {};
  examples['application/json'] = {
  "fullName" : "aeiou",
  "admin" : true,
  "id" : "aeiou",
  "email" : "aeiou"
};
  if (Object.keys(examples).length > 0) {
    res.setHeader('Content-Type', 'application/json');
    res.end(JSON.stringify(examples[Object.keys(examples)[0]] || {}, null, 2));
  } else {
    res.end();
  }
}

exports.listUsers = function(args, res, next) {
  /**
   * List users
   * Retrieve a list of all users.
   *
   * returns List
   **/
  var examples = {};
  examples['application/json'] = [ {
  "fullName" : "aeiou",
  "admin" : true,
  "id" : "aeiou",
  "email" : "aeiou"
} ];
  if (Object.keys(examples).length > 0) {
    res.setHeader('Content-Type', 'application/json');
    res.end(JSON.stringify(examples[Object.keys(examples)[0]] || {}, null, 2));
  } else {
    res.end();
  }
}

exports.parseJwt = function(args, res, next) {
  /**
   * Parse a JWT
   * Parse a JWT and return the user info from the claims
   *
   * body JWTParseRequest JWT (optional)
   * returns TokenClaimsResponse
   **/
  var examples = {};
  examples['application/json'] = {
  "userInfo" : {
    "key" : "{}"
  }
};
  if (Object.keys(examples).length > 0) {
    res.setHeader('Content-Type', 'application/json');
    res.end(JSON.stringify(examples[Object.keys(examples)[0]] || {}, null, 2));
  } else {
    res.end();
  }
}

